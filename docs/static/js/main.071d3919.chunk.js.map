{"version":3,"sources":["components/AddElement.js","helpers/fetchGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddElement","setArr","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","prevState","type","value","onChange","target","placeholder","fetchGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","key","GifApp","arr","i","ReactDOM","render","document","getElementById"],"mappings":"6KAGaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACJC,mBAAS,IADL,mBACjCC,EADiC,KACrBC,EADqB,KAexC,OACE,oCACE,0BAAMC,SAXW,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAO,SAACS,GAAD,OAAgBP,GAAhB,mBAA+BO,OACtCN,EAAc,OAOZ,2BACEO,KAAK,OACLC,MAAOT,EACPU,SAlBY,SAACP,GACnBF,EAAcE,EAAEQ,OAAOF,QAkBjBG,YAAY,e,uBCzBTC,EAAS,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACjBC,EADiB,iDAC+BC,UACpDH,GAFqB,+DAKJI,MAAMF,GALF,cAKjBG,EALiB,gBAOAA,EAAKC,OAPL,uBAOfC,EAPe,EAOfA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAItCa,QAAQC,IAAIR,GAjBW,kBAmBhBA,GAnBgB,4CAAH,sDCETS,EAAc,SAAC,GAAoB,IAAlBL,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACnC,OACE,oCACE,yBAAKgB,UAAU,0CACb,yBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,2BAAIA,MCHCS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdf,mBAAS,CACjCsB,KAAM,GACNe,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAcxC,OATAC,qBAAU,WACR1B,EAAUC,GAAU0B,MAAK,SAACC,GAAD,OACvBH,EAAS,CACPjB,KAAMoB,EACNL,SAAS,SAGZ,CAACtB,IAEGuB,EDZyBK,CAAa5B,GAA/B2B,EADyB,EAC/BpB,KAAYe,EADmB,EACnBA,QAEpB,OACE,oCACE,wBAAIJ,UAAU,qCAAqClB,GAElDsB,GACC,uBAAGJ,UAAU,oCAAb,cAEF,yBAAKA,UAAU,aACZS,EAAKlB,KAAI,SAACoB,GAAD,OACR,kBAAC,EAAD,eAAaC,IAAKD,EAAIlB,IAAQkB,UEZ3BE,EAAS,WAAO,IAAD,EACJ9C,mBAAS,CAAC,YADN,mBACnB+C,EADmB,KACdhD,EADc,KAG1B,OACE,6BACE,uCACA,kBAAC,EAAD,CAAYA,OAAQA,IACpB,6BAEA,4BACGgD,EAAIvB,KAAI,SAACT,EAAUiC,GAAX,OACP,kBAAC,EAAD,CAASH,IAAKG,EAAGjC,SAAUA,U,MCXrCkC,IAASC,OAAO,kBAAC,EAAD,MAAYC,SAASC,eAAe,U","file":"static/js/main.071d3919.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddElement = ({ setArr }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInput = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setArr((prevState) => [inputValue, ...prevState]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={handleInput}\r\n          placeholder=\"Example\"\r\n        />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nAddElement.propTypes = {\r\n  setArr: PropTypes.func.isRequired,\r\n};\r\n","export const fetchGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=TeSas8cRERdRCR57eHHBCndqwJguHR33`;\r\n\r\n  const resp = await fetch(url);\r\n\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((gif) => {\r\n    return {\r\n      id: gif.id,\r\n      title: gif.title,\r\n      url: gif.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  console.log(gifs);\r\n\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <>\r\n      <div className=\"card animate__animated animate__fadeIn\">\r\n        <img src={url} alt={title} />\r\n        <p>{title}</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: imgs, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n      {loading && (\r\n        <p className=\"animate__animated animate__flash\">Loading...</p>\r\n      )}\r\n      <div className=\"card-grid\">\r\n        {imgs.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { fetchGifs } from \"../helpers/fetchGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n  useEffect(() => {\r\n    fetchGifs(category).then((imgs) =>\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      })\r\n    );\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddElement } from \"./components/AddElement\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifApp = () => {\r\n  const [arr, setArr] = useState([\"Example\"]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Gif App</h2>\r\n      <AddElement setArr={setArr} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {arr.map((category, i) => (\r\n          <GifGrid key={i} category={category} />\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { GifApp } from \"./GifApp\";\r\nimport \"./index.css\";\r\nReactDOM.render(<GifApp />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}